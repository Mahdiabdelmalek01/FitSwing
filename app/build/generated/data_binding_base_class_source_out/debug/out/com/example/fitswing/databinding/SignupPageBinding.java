// Generated by view binder compiler. Do not edit!
package com.example.fitswing.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fitswing.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignupPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView loginText;

  @NonNull
  public final EditText txtConfirmPassword;

  @NonNull
  public final EditText txtEmail;

  @NonNull
  public final EditText txtName;

  @NonNull
  public final EditText txtPassword;

  private SignupPageBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnRegister,
      @NonNull CardView cardView, @NonNull TextView loginText, @NonNull EditText txtConfirmPassword,
      @NonNull EditText txtEmail, @NonNull EditText txtName, @NonNull EditText txtPassword) {
    this.rootView = rootView;
    this.btnRegister = btnRegister;
    this.cardView = cardView;
    this.loginText = loginText;
    this.txtConfirmPassword = txtConfirmPassword;
    this.txtEmail = txtEmail;
    this.txtName = txtName;
    this.txtPassword = txtPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignupPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignupPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.signup_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignupPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRegister;
      Button btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.loginText;
      TextView loginText = ViewBindings.findChildViewById(rootView, id);
      if (loginText == null) {
        break missingId;
      }

      id = R.id.txtConfirmPassword;
      EditText txtConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtConfirmPassword == null) {
        break missingId;
      }

      id = R.id.txtEmail;
      EditText txtEmail = ViewBindings.findChildViewById(rootView, id);
      if (txtEmail == null) {
        break missingId;
      }

      id = R.id.txtName;
      EditText txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txtPassword;
      EditText txtPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtPassword == null) {
        break missingId;
      }

      return new SignupPageBinding((ConstraintLayout) rootView, btnRegister, cardView, loginText,
          txtConfirmPassword, txtEmail, txtName, txtPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
